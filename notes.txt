Source: Programming with Mosh - https://www.youtube.com/watch?v=93p3LxR9xfM
Purpose of Redux:
- state management library
- state is stored inside a central repo. A javascript object called "Store"
- data is updated from the Store (single source of truth)

Pros:
- makes state changes predictable
- centralizes state
- can easily debug (redux chrome dev tool)
- perserve page stage
- implement undo/redo 
- many of add-ons

Cons:
- complexity 
- verbosity. boilerplate needed 

When Not to Use: 
- tight budget
- small to med size app
- simple ui/data flow
- static data

Reducer Function:
function reducer(store, action) {
  const updated = {...store};
}
- a function that takes current instance of store and returns updated store
- action (aka event). plain objects that describes what happened
- reducer is like an event handler. pure functions

Steps to build Redux:
- design the store
- define the actions
- create reducer
- set up the store

